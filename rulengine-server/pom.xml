<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.personal.project</groupId>
		<artifactId>rulengine-personal</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>rulengine-server</artifactId>

	<dependencies>
	
		<dependency>
			<groupId>com.personal.project</groupId>
  			<artifactId>rulengine-server-api</artifactId>
			<version>${rulengine-version}</version>
		</dependency>
		<dependency>
			<groupId>com.personal.project</groupId>
			<artifactId>rulengine-service</artifactId>
			<version>${rulengine-version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<version>${dubbo.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>${zookeeper.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
      				<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
      				<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.101tec</groupId>
			<artifactId>zkclient</artifactId>
			<version>${zkclient.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
      				<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


	</dependencies>
	
	<build>  
		
		<pluginManagement>  
            <plugins>  
                <plugin>  
                    <groupId>org.eclipse.m2e</groupId>  
                    <artifactId>lifecycle-mapping</artifactId>  
                    <version>1.0.0</version>  
                    <configuration>  
                        <lifecycleMappingMetadata>  
                            <pluginExecutions>  
                                <pluginExecution>  
                                    <pluginExecutionFilter>  
                                        <groupId>org.apache.maven.plugins</groupId>  
                                        <artifactId>maven-dependency-plugin</artifactId>  
                                        <versionRange>[2.0,)</versionRange>  
                                        <goals>  
                                            <goal>copy-dependencies</goal>  
                                        </goals>  
                                    </pluginExecutionFilter>  
                                    <action>  
                                        <ignore />  
                                    </action>  
                                </pluginExecution>  
                            </pluginExecutions>  
                        </lifecycleMappingMetadata>  
                    </configuration>  
                </plugin>  
            </plugins>  
        </pluginManagement> 
        
        <finalName>${project.artifactId}-${project.version}</finalName>  
        <!-- <sourceDirectory>src/main/java</sourceDirectory>  
        <resources>  
            <resource>  
                <directory>src/main/resources</directory>  
                <targetPath>${project.build.directory}</targetPath>  
            </resource>  
        </resources>  --> 
        <plugins> 
        
        	<!-- 生成main方法可执行jar包,并保存到指定的目录中,可以使用 -->
			<plugin>  
			    <groupId>org.apache.maven.plugins</groupId>  
			    <artifactId>maven-jar-plugin</artifactId>  
			    <version>2.4</version>  
			    <configuration>  
			    	<source>1.7</source>
        			<target>1.7</target>
        			<encoding>UTF-8</encoding>
			   		<classesDirectory>target/classes</classesDirectory>
			        <archive>  
			            <manifest>
			                <addClasspath>true</addClasspath>  
			                <classpathPrefix>./</classpathPrefix>  
			                <mainClass>com.personal.rulengine.main.StartMainServer</mainClass>  
			            </manifest>  
			        </archive> 
			   		<outputDirectory>${project.build.directory}/lib</outputDirectory>
			    </configuration>  
			</plugin>
			<!--同上,只是添加部分参数,可以使用-->
			<!-- <plugin>  
			    <groupId>org.apache.maven.plugins</groupId>  
			    <artifactId>maven-jar-plugin</artifactId>  
			    <version>2.4</version>  
			    <configuration>  
			    	<source>1.7</source>
        			<target>1.7</target>
        			<encoding>UTF-8</encoding>
			   		<classesDirectory>target/classes</classesDirectory>
			        <archive>  
			            <manifest>    
			                <mainClass>com.personal.rulengine.main.StartMainServer</mainClass>  
							<useUniqueVersions>false</useUniqueVersions>
							<addClasspath>true</addClasspath>
						    <classpathPrefix>lib/</classpathPrefix>  
			            </manifest>
						<manifestEntries>  
							<Class-Path>./</Class-Path>  
						</manifestEntries>  
			        </archive> 
			    </configuration>  
			</plugin> -->
			
			
			<!-- 方式1:打包jar文件时，配置manifest文件，加入lib包的jar依赖,运行mvn clean install即可 -->  
			<!-- 实现拷贝依赖的jar包到lib目录 -->  
            <!-- <plugin>  
                <groupId>org.apache.maven.plugins</groupId>  
                <artifactId>maven-dependency-plugin</artifactId>  
                <executions>  
                    <execution>  
                        <id>copy</id>  
                        <phase>package</phase>  
                        <goals>  
                            <goal>copy-dependencies</goal>  
                        </goals>  
                        <configuration>  
							<type>jar</type>
							<includeTypes>jar<includeTypes/>
							<useUniqueVersions>false<useUniqueVersions/>
                            <outputDirectory>  
                                ${project.build.directory}/lib  
                            </outputDirectory>  
                        </configuration>  
                    </execution>  
                </executions>  
            </plugin>  -->
            
            
            <!-- 方式2:通过配置distribution.xml的方式,配置打包资源文件, 不管理main方法的打包,main方法打包依赖上面的插件-->
            <!-- 运行mvn assembly:assembly -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					 <encoding>UTF-8</encoding>
				 	 <appendAssemblyId>true</appendAssemblyId>  
					<descriptors>
						<descriptor>src/assembly/distribution.xml</descriptor>
					</descriptors>
				</configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
			</plugin>
            
            
            <!-- 方式3:正在测试修改,暂不可用,提示dubbo相关错误,该方法不可行 -->
            <!-- <plugin>  
			    <groupId>org.apache.maven.plugins</groupId>  
			    <artifactId>maven-assembly-plugin</artifactId>  
			    <version>2.6</version>  
			    <configuration>  
			        <encoding>UTF-8</encoding>
			        <appendAssemblyId>false</appendAssemblyId>  
			        <descriptorRefs>  
			            <descriptorRef>jar-with-dependencies</descriptorRef>  
			        </descriptorRefs>  
			        <archive>  
			            <manifest>  
			                <mainClass>com.personal.rulengine.main.StartMainServer</mainClass>  
			            </manifest>  
			        </archive>  
			    </configuration>  
			    <executions>  
			        <execution>  
			            <id>make-assembly</id>  
			            <phase>package</phase>  
			            <goals>  
			                <goal>assembly</goal>  
			            </goals>  
			        </execution>  
			    </executions>  
			</plugin>  -->
			
			<!-- 方法4:未测试 mvn package -->
			<!-- <plugin>  
                <groupId>org.apache.maven.plugins</groupId>  
                <artifactId>maven-shade-plugin</artifactId>  
                <version>1.4</version>  
                <executions>  
                    <execution>  
                        <phase>package</phase>  
                        <goals>  
                            <goal>shade</goal>  
                        </goals>  
                        <configuration>  
                            <filters>  
                                <filter>  
                                    <artifact>*:*</artifact>  
                                    <excludes>  
                                        <exclude>META-INF/*.SF</exclude>  
                                        <exclude>META-INF/*.DSA</exclude>  
                                        <exclude>META-INF/*.RSA</exclude>  
                                    </excludes>  
                                </filter>  
                            </filters>  
                            <transformers>  
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">  
                                    <mainClass>com.personal.rulengine.main.StartMainServer</mainClass>  
                                </transformer>  
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">  
                                    <resource>META-INF/spring.handlers</resource>  
                                </transformer>  
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">  
                                    <resource>META-INF/spring.schemas</resource>  
                                </transformer>  
                            </transformers>  
                        </configuration>  
                    </execution>  
                </executions>  
            </plugin>   -->
			
			<!-- 方法5:未测试 -->
			<!-- <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>com.vineetmanohar.module.CodeGenerator</mainClass>
							<arguments>
								<argument>arg0</argument>
								<argument>arg1</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
            
        </plugins>
	</build>
	
</project>