<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	  http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	  http://www.springframework.org/schema/mvc
	  http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	  http://www.springframework.org/schema/context
	  http://www.springframework.org/schema/context/spring-context-4.0.xsd
	  http://www.springframework.org/schema/aop 
	  http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	  http://www.springframework.org/schema/util        
      http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.personal.rulengine.mamager" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect"/>
	</context:component-scan>
    
	<mvc:annotation-driven>
	   <mvc:message-converters register-defaults="true">  
              <ref bean="fastJsonHttpMessageConverter" />  
        </mvc:message-converters>
	</mvc:annotation-driven>
	<bean id="fastJsonHttpMessageConverter"  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>application/json;charset=UTF-8</value>  
                <value>text/html;charset=UTF-8</value>
            </list>  
        </property>  
        <property name="features">  
            <util:list>  
                    <!-- QuoteFieldNames-输出key时是否使用双引号,默认为true
				    WriteMapNullValue-是否输出值为null的字段,默认为false
				    WriteNullNumberAsZero-数值字段如果为null,输出为0,而非null
				    WriteNullListAsEmptyList-字段如果为null,输出为[],而非null
				    WriteNullStringAsEmpty-字符类型字段如果为null,输出为"",而非null
				    WriteNullBooleanAsFalse-Boolean字段如果为null,输出为false,而非null 
				    -->
               
                <!-- <value>WriteNullBooleanAsFalse</value>  
                <value>WriteNullStringAsEmpty</value>  
                <value>WriteNullListAsEmpty</value>  
                <value>WriteNullNumberAsZero</value>  
                <value>WriteMapNullValue</value>   
                <value>QuoteFieldNames</value>  
                -->
                <value>DisableCircularReferenceDetect</value>  
            </util:list>  
        </property>  
    </bean>  
    <bean id="DisableCircularReferenceDetect" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">  
       <property name="staticField" value="com.alibaba.fastjson.serializer.SerializerFeature.DisableCircularReferenceDetect"/>  
   </bean>
   
	<!-- JSON转换,等价同上 -->
     <!-- <bean id="jackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
         <property name="objectMapper">
             <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                 <property name="serializationInclusion">
                     <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
                 </property>
             </bean>
         </property>
     </bean>
	<mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
				<ref bean="jackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven> -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
				<ref bean="jackson2HttpMessageConverter"/>
			</list>
		</property>
	</bean> -->
	
	<!-- 方式0 -->
	<!-- <bean id="fastXMLHttpMessageConverter"  class="org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter">
		<property name="supportedMediaTypes">  
	          <list>  
	              <value>application/xml;charset=UTF-8</value>  
	          </list>  
	      </property> 
	      <property name="objectMapper" value="com.fasterxml.jackson.dataformat.xml.XmlMapper"/>
	      <property name="prettyPrint" value="false"/>
	</bean> -->
	
	<!-- 方式1 -->
	<!-- XML格式数据转换类 -->
	<!-- <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
	<bean id="xmlViewer" class="org.springframework.web.servlet.view.xml.MarshallingView">
		<constructor-arg>
			<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
				<property name="classesToBeBound">
					<list>
						<value>com.personal.rulengine.mamager.controller.order.XMLEntity</value>
					</list>
				</property>
			</bean>
		</constructor-arg>
	</bean> -->
	
	<!-- 方式2 -->
	<!-- xml视图，XStreamMarshaller，可以转换任何形式的java对象，需要添加xStream jar包 -->
	<!-- <bean name="xStreamMarshallingView" class="org.springframework.web.servlet.view.xml.MarshallingView">
	    <property name="marshaller">
	        <bean class="org.springframework.oxm.xstream.XStreamMarshaller">  
	                启用annotation
	               <property name="autodetectAnnotations" value="true"/>  
	            <property name="aliases">
	                <map>
	                    Account这个类的别名就变成了myBeans，那么转换后的xml中就是myBeans
	                    <entry key="account" value="com.personal.rulengine.mamager.controller.order.AccountBean"/>
	                </map>
	            </property>
	            基本属性别名
	            <property name="fieldAliases">
	                <map>
	                    Account中的brithday这个属性
	                    <entry key="com.personal.rulengine.mamager.controller.order.Brithday" value="生日"/>
	                </map>
	            </property>
	           </bean>  
	    </property>
	</bean> -->

	<!-- 方式3 -->
	<!-- <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="defaultContentType" value="application/xml" />
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="false" />
		<property name="parameterName" value="mediaType" />
		<property name="ignoreAcceptHeader" value="false" />
		<property name="useJaf" value="false" />
	</bean> -->

	<!-- 方式4 -->
	<!-- <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="xml" value="application/xml;charset=UTF-8" />
				<entry key="json" value="application/json;charset=UTF-8" />
			</map>
		</property>
		<property name="defaultContentType" value="text/html;charset=UTF-8" />
		<property name="ignoreAcceptHeader" value="true" />
		<property name="favorPathExtension" value="true" />
		<property name="viewResolvers">
			<list>
				<ref bean="viewResolver" />  
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller">
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller" />
					</property>
				</bean>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</list>
		</property>
	</bean> -->
	
   	<!-- JSP视图文件解析配置 -->  
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>  
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
		<property name="viewNames" value="/jsp/*"/>  
		<property name="contentType" value="text/html;charset=UTF8" />
	</bean> 
	
	<!-- 配置MessageSource -->
	 <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>
    
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
   
	<!-- mvc全局异常处理 -->
    <bean class="com.personal.rulengine.mamager.interceptor.SvrHandlerExceptionResolver" />  
	<aop:aspectj-autoproxy/> 
	
</beans>
